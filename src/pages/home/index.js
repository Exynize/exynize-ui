import React from 'react';
import {RxState} from '../../stores/util';
import auth from '../../stores/auth';

const Home = React.createClass({
    mixins: [RxState],
    stores: {
        authed: auth.map(v => v.get('authed')),
    },

    render() {
        return (
            <div className="row">
                <div className="col-xs-6 col-xs-offset-3">
                    <h3>What is Exynize?</h3>
                    <blockquote>
                        <strong className="text-danger">Alpha</strong>
                        <p>
                            This is an Alpha release of Exynize platform.
                            Features might be changed in backward-incompatible ways
                            and it is not recommended for production use.
                        </p>
                    </blockquote>
                    <p className="description-text">
                        Exynize is a lightweight asynchronous compute solution
                        that allows you to create small, single-purpose functions (and pipelines from those functions)
                        that respond to cloud events without the need to manage a server or a runtime environment.
                    </p>
                    <p className="description-text">
                        Exynize is written in Javascript and execute in a managed Node.js environment.
                        Exynize provides three different function types (also refered to as "components"):
                    </p>
                    <ul className="description-text">
                        <li>
                            <strong>Source</strong> - generate events and/or data that should be processed.
                        </li>
                        <li>
                            <strong>Processor</strong> - processes the incoming data, can be either plugged into
                                source or chained after another processor.
                        </li>
                        <li>
                            <strong>Render</strong> - renders the final result as HTML.
                        </li>
                    </ul>
                    <p className="description-text">
                        All components are executed as stand-alone microservices and can do processing in real-time
                        as more events/data comes in.
                        Those components can be combined into more complex processing functions called "pipelines".
                        Pipeline always includes one source, at least one processor and one renderer.
                    </p>
                    <p className="description-text">
                        {/* TODO: insert correct link */}
                        <a href="#">Read more about Exynize architecutre.</a>
                    </p>
                    <h3>Sources</h3>
                    <p className="description-text">
                        Sources are functions generating events and/or data that should be processed.
                        Events generated by sources will trigger processors asynchronously.
                        It is also possible to use HTTP requests and WebSocket to pass additional data to sources
                        that are already running.
                    </p>
                    <p className="description-text">
                        {/* TODO: insert correct link */}
                        <a href="#">Read more about sources.</a>
                    </p>
                    <h3>Processors</h3>
                    <p className="description-text">
                        Processors are functions processing the incoming events and/or data.
                        Processors can be both - synchronous and asynchronous.
                        It is also possible to use processors to produce side-effects
                        (e.g. send emails, send slack message, etc).
                    </p>
                    <p className="description-text">
                        {/* TODO: insert correct link */}
                        <a href="#">Read more about processors.</a>
                    </p>
                    <h3>Renders</h3>
                    <p className="description-text">
                        Renders are the functions used for rendering the results of the pipeline.
                        Renders create a React component that should handle the results.
                        The data will be delivered to renders in real-time as it comes through the pipeline.
                    </p>
                    <p className="description-text">
                        {/* TODO: insert correct link */}
                        <a href="#">Read more about renderers.</a>
                    </p>
                    <h3>Additional info</h3>
                    <p className="description-text">
                        You can additionally read the following tutorials:
                    </p>
                    <ul className="description-text">
                        {/* TODO: insert correct links */}
                        <li><a href="#">Basic Exynize tutorial</a></li>
                        <li><a href="#">Twitter product comparison tutorial</a></li>
                        <li><a href="#">BBC world news sentiments map tutorial</a></li>
                        <li><a href="#">Slack search bot tutorial</a></li>
                        <li><a href="#">Slack slash command tutorial</a></li>
                    </ul>
                </div>
            </div>
        );
    },
});

export default Home;
